{"ast":null,"code":"var _jsxFileName = \"/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreflopCharts() {\n  _s();\n\n  const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n  const [randomizer, setRandomizer] = useState(\"--\");\n  const games = [\"Online Cash\", \"MTT\"];\n  const onlineCashOptions = [[\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]];\n\n  const onClickButton = (option, param) => {\n    const newSelections = [...selections];\n    newSelections[option] = param;\n\n    if (option === 1 && param === \"RFI\") {\n      option++;\n      newSelections[option] = \"None\";\n    }\n\n    for (let i = option + 1; i < selections.length; i++) {\n      newSelections[i] = \"\";\n    }\n\n    setSelections(newSelections);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group-spacing\",\n      children: games.map(item => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-spacing\",\n          variant: selections[0] === item ? \"light\" : \"secondary\",\n          onClick: () => onClickButton(0, item),\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), onlineCashOptions.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group-spacing\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          size: \"sm\",\n          children: item.map(subitem => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: selections[index + 1] === subitem ? \"light\" : \"secondary\",\n              disabled: !selections[index].length ? true : false,\n              onClick: () => onClickButton(index + 1, subitem),\n              children: subitem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PreflopCharts, \"OJnoh/CaDXvX8O0a1e+QibQAXsc=\");\n\n_c = PreflopCharts;\nexport default PreflopCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreflopCharts\");","map":{"version":3,"sources":["/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js"],"names":["React","useState","ButtonGroup","Button","PreflopCharts","selections","setSelections","randomizer","setRandomizer","games","onlineCashOptions","onClickButton","option","param","newSelections","i","length","map","item","index","subitem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nfunction PreflopCharts(){\n    const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n    const [randomizer, setRandomizer] = useState(\"--\");\n\n    const games = [\"Online Cash\", \"MTT\"];\n\n    const onlineCashOptions = [\n        [\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]\n    ];\n\n    const onClickButton = (option, param) => {\n        const newSelections = [...selections];\n        newSelections[option] = param;\n        \n        if(option === 1 && param === \"RFI\"){\n            option++;\n            newSelections[option] = \"None\";\n        }\n\n        for(let i = option+1; i < selections.length; i++){\n            newSelections[i]= \"\";\n        }\n\n        setSelections(newSelections);\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"btn-group-spacing\">\n            {games.map((item) => { return ( \n                <Button className=\"btn-spacing\" variant={(selections[0] === item ? \"light\" : \"secondary\")} onClick={() => onClickButton(0, item)}>{item}</Button>\n            )})}\n            </div>\n            {onlineCashOptions.map((item, index) => { return (\n            <div className=\"btn-group-spacing\">\n                <ButtonGroup size=\"sm\">\n                {item.map((subitem) => { return (\n                    <Button variant={(selections[index+1] === subitem ? \"light\" : \"secondary\")} disabled={!selections[index].length ? true : false} onClick={() => onClickButton(index+1, subitem)}>{subitem}</Button>\n                )})}\n                </ButtonGroup>\n            </div>\n            )})}\n        </div>\n    )\n}\n\nexport default PreflopCharts;"]},"metadata":{},"sourceType":"module"}