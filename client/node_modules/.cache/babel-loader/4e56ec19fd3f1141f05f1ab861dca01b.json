{"ast":null,"code":"var _jsxFileName = \"/Users/tahreak/Workspace/bombpot/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Modal, Button } from \"react-bootstrap\";\nimport CardBack from \"../assets/images/deck/z_cardback.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [cardsSelector, setCardsSelector] = useState(Array.from(Array(4), () => Array(13).fill(false)));\n  const [cardsSelected, setCardsSelected] = useState([]);\n  const cards = [[\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"], [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"], [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"], [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"]];\n\n  const onClickCard = (i, j) => {\n    const newCardsSelector = [...cardsSelector];\n    const newCardsSelected = [...cardsSelected];\n    let cardVal = cards[i][j];\n    if (i === 0) cardVal += \"s\";else if (i === 1) cardVal += \"h\";else if (i === 2) cardVal += \"c\";else if (i === 3) cardVal += \"d\";\n\n    if (cardsSelector[i][j]) {\n      newCardsSelector[i][j] = false;\n      newCardsSelected.splice(newCardsSelected.indexOf(cardVal, 0), 1);\n    } else if (!cardsSelector[i][j] && cardsSelected.length < 5) {\n      newCardsSelector[i][j] = true;\n      newCardsSelected.push(cardVal);\n    }\n\n    setCardsSelector(newCardsSelector);\n    setCardsSelected(newCardsSelected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row board\",\n      onClick: () => setShow(true),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-playing-card\",\n        alt: \"card\",\n        src: CardBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-playing-card\",\n        alt: \"card\",\n        src: CardBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-playing-card\",\n        alt: \"card\",\n        src: CardBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-playing-card\",\n        alt: \"card\",\n        src: CardBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"board-playing-card\",\n        alt: \"card\",\n        src: CardBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      show: show,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Board Card Selector\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: cards.map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            className: \"flex-nowrap\",\n            children: item.map((subitem, j) => {\n              return /*#__PURE__*/_jsxDEV(Col, {\n                className: \"board-modal-card \" + (i % 2 ? \"red\" : \"black\"),\n                onClick: () => onClickCard(i, j),\n                style: cardsSelector[i][j] ? {\n                  backgroundColor: \"yellow\"\n                } : {},\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: subitem\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 29\n                }, this), (() => {\n                  switch (i) {\n                    case 0:\n                      return /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi-suit-spade-fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 48\n                      }, this);\n\n                    case 1:\n                      return /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi-suit-heart-fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 48\n                      }, this);\n\n                    case 2:\n                      return /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi-suit-club-fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 48\n                      }, this);\n\n                    case 3:\n                      return /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi-suit-diamond-fill\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 48\n                      }, this);\n\n                    default:\n                      return /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 48\n                      }, this);\n                  }\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShow(false),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Board, \"7n/VDs66sVINWoWF9+EOt0vOtCA=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/tahreak/Workspace/bombpot/client/src/components/Board.js"],"names":["React","useState","Row","Col","Modal","Button","CardBack","Board","show","setShow","cardsSelector","setCardsSelector","Array","from","fill","cardsSelected","setCardsSelected","cards","onClickCard","i","j","newCardsSelector","newCardsSelected","cardVal","splice","indexOf","length","push","map","item","subitem","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,sCAArB;;;AAEA,SAASC,KAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACW,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqB,MAAMA,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,CAAe,KAAf,CAA3B,CAAD,CAAlD;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMgB,KAAK,GAAG,CACV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CADU,EAEV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAFU,EAGV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAHU,EAIV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAJU,CAAd;;AAOA,QAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,UAAMC,gBAAgB,GAAG,CAAC,GAAGX,aAAJ,CAAzB;AACA,UAAMY,gBAAgB,GAAG,CAAC,GAAGP,aAAJ,CAAzB;AAEA,QAAIQ,OAAO,GAAGN,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,CAAd;AACA,QAAGD,CAAC,KAAK,CAAT,EACII,OAAO,IAAI,GAAX,CADJ,KAEK,IAAGJ,CAAC,KAAK,CAAT,EACDI,OAAO,IAAI,GAAX,CADC,KAEA,IAAGJ,CAAC,KAAK,CAAT,EACDI,OAAO,IAAI,GAAX,CADC,KAEA,IAAGJ,CAAC,KAAK,CAAT,EACDI,OAAO,IAAI,GAAX;;AAEJ,QAAGb,aAAa,CAACS,CAAD,CAAb,CAAiBC,CAAjB,CAAH,EAAuB;AACnBC,MAAAA,gBAAgB,CAACF,CAAD,CAAhB,CAAoBC,CAApB,IAAyB,KAAzB;AACAE,MAAAA,gBAAgB,CAACE,MAAjB,CAAwBF,gBAAgB,CAACG,OAAjB,CAAyBF,OAAzB,EAAkC,CAAlC,CAAxB,EAA8D,CAA9D;AACH,KAHD,MAIK,IAAG,CAACb,aAAa,CAACS,CAAD,CAAb,CAAiBC,CAAjB,CAAD,IAAwBL,aAAa,CAACW,MAAd,GAAuB,CAAlD,EAAoD;AACrDL,MAAAA,gBAAgB,CAACF,CAAD,CAAhB,CAAoBC,CAApB,IAAyB,IAAzB;AACAE,MAAAA,gBAAgB,CAACK,IAAjB,CAAsBJ,OAAtB;AACH;;AAEDZ,IAAAA,gBAAgB,CAACU,gBAAD,CAAhB;AACAL,IAAAA,gBAAgB,CAACM,gBAAD,CAAhB;AACH,GAzBD;;AA2BA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA0B,MAAA,OAAO,EAAE,MAAMb,OAAO,CAAC,IAAD,CAAhD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAC,MAAxC;AAA+C,QAAA,GAAG,EAAEH;AAApD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAC,MAAxC;AAA+C,QAAA,GAAG,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAC,MAAxC;AAA+C,QAAA,GAAG,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAC,MAAxC;AAA+C,QAAA,GAAG,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAC,MAAxC;AAA+C,QAAA,GAAG,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,IAAI,EAAEE,IAAtB;AAA4B,MAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CAAjD;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,kBACCQ,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOV,CAAP,KAAa;AAAE,8BACtB,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACCU,IAAI,CAACD,GAAL,CAAS,CAACE,OAAD,EAAUV,CAAV,KAAgB;AAAE,kCACxB,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAE,uBAAuBD,CAAC,GAAG,CAAJ,GAAQ,KAAR,GAAgB,OAAvC,CAAhB;AAAiE,gBAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,CAAD,EAAIC,CAAJ,CAA3F;AAAmG,gBAAA,KAAK,EAAEV,aAAa,CAACS,CAAD,CAAb,CAAiBC,CAAjB,IAAsB;AAACW,kBAAAA,eAAe,EAAE;AAAlB,iBAAtB,GAAoD,EAA9J;AAAA,wCACI;AAAA,4BAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEK,CAAC,MAAM;AACJ,0BAAOX,CAAP;AACI,yBAAK,CAAL;AACI,0CAAO;AAAG,wBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACJ,yBAAK,CAAL;AACI,0CAAO;AAAG,wBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACJ,yBAAK,CAAL;AACI,0CAAO;AAAG,wBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACJ,yBAAK,CAAL;AACI,0CAAO;AAAG,wBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACJ;AACI,0CAAO;AAAA;AAAA;AAAA;AAAA,8BAAP;AAVR;AAYH,iBAbA,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA,sBADwB;AAkB1B,aAlBD;AADD;AAAA;AAAA;AAAA;AAAA,kBADsB;AAsBxB,SAtBD;AADD;AAAA;AAAA;AAAA;AAAA,cAJJ,eA6BI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMV,OAAO,CAAC,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH;;GApFQF,K;;KAAAA,K;AAsFT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Modal, Button } from \"react-bootstrap\";\nimport CardBack from \"../assets/images/deck/z_cardback.png\";\n\nfunction Board(){\n    const [show, setShow] = useState(false);\n    const [cardsSelector, setCardsSelector] = useState(Array.from(Array(4), () => Array(13).fill(false)));\n    const [cardsSelected, setCardsSelected] = useState([]);\n\n    const cards = [\n        [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"],\n        [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"],\n        [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"],\n        [\"A\", \"K\", \"Q\", \"J\", \"T\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"]\n    ];\n\n    const onClickCard = (i, j) => {\n        const newCardsSelector = [...cardsSelector];\n        const newCardsSelected = [...cardsSelected];\n\n        let cardVal = cards[i][j];\n        if(i === 0)\n            cardVal += \"s\";\n        else if(i === 1)\n            cardVal += \"h\";\n        else if(i === 2)\n            cardVal += \"c\";\n        else if(i === 3)\n            cardVal += \"d\";\n\n        if(cardsSelector[i][j]){\n            newCardsSelector[i][j] = false;\n            newCardsSelected.splice(newCardsSelected.indexOf(cardVal, 0), 1);\n        }\n        else if(!cardsSelector[i][j] && cardsSelected.length < 5){\n            newCardsSelector[i][j] = true;\n            newCardsSelected.push(cardVal);\n        }\n        \n        setCardsSelector(newCardsSelector);\n        setCardsSelected(newCardsSelected);\n    }\n\n    return(\n        <div>\n            <div className=\"row board\"onClick={() => setShow(true)}>\n                <img className=\"board-playing-card\" alt=\"card\" src={CardBack}/>\n                <img className=\"board-playing-card\" alt=\"card\" src={CardBack}/>\n                <img className=\"board-playing-card\" alt=\"card\" src={CardBack}/>\n                <img className=\"board-playing-card\" alt=\"card\" src={CardBack}/>\n                <img className=\"board-playing-card\" alt=\"card\" src={CardBack}/>\n            </div>\n\n            <Modal centered show={show} onHide={() => setShow(false)}>\n                <Modal.Header >\n                    <Modal.Title>Board Card Selector</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                {cards.map((item, i) => { return (\n                    <Row className=\"flex-nowrap\">\n                    {item.map((subitem, j) => { return (\n                        <Col className={\"board-modal-card \" + (i % 2 ? \"red\" : \"black\")} onClick={() => onClickCard(i, j)} style={cardsSelector[i][j] ? {backgroundColor: \"yellow\"} : {}}>\n                            <div>{subitem}</div>\n                            {(() => {\n                                switch(i){\n                                    case 0:\n                                        return <i className=\"bi-suit-spade-fill\"></i>;\n                                    case 1:\n                                        return <i className=\"bi-suit-heart-fill\"></i>;\n                                    case 2:\n                                        return <i className=\"bi-suit-club-fill\"></i>;\n                                    case 3:\n                                        return <i className=\"bi-suit-diamond-fill\"></i>;\n                                    default:\n                                        return <i/>;\n                                }\n                            })()}\n                        </Col>\n                    )})}\n                    </Row>\n                )})}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={() => setShow(false)}>Submit</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}