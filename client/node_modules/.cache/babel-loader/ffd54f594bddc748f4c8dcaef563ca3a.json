{"ast":null,"code":"var _jsxFileName = \"/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport RangeChart from \"../components/RangeChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PreflopCharts() {\n  _s();\n\n  const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n  const [randomizer, setRandomizer] = useState(\"--\");\n  const games = [\"Online Cash\", \"MTT\"];\n  const onlineCashOptions = [[\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]];\n\n  const onClickButton = (option, param) => {\n    const newSelections = [...selections];\n    newSelections[option] = param;\n\n    if (option === 1 && param === \"RFI\") {\n      option++;\n      newSelections[option] = \"None\";\n    }\n\n    for (let i = option + 1; i < selections.length; i++) {\n      newSelections[i] = \"\";\n    }\n\n    setSelections(newSelections);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group-spacing\",\n        children: games.map(item => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-spacing\",\n            variant: selections[0] === item ? \"light\" : \"secondary\",\n            onClick: () => onClickButton(0, item),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), onlineCashOptions.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group-spacing\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            size: \"sm\",\n            children: item.map(subitem => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                variant: selections[index + 1] === subitem ? \"light\" : \"secondary\",\n                disabled: !selections[index].length || index === 1 && selections[2] === 'None' ? true : false,\n                onClick: () => onClickButton(index + 1, subitem),\n                children: subitem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RangeChart, {\n      selections: selections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PreflopCharts, \"OJnoh/CaDXvX8O0a1e+QibQAXsc=\");\n\n_c = PreflopCharts;\nexport default PreflopCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreflopCharts\");","map":{"version":3,"sources":["/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js"],"names":["React","useState","ButtonGroup","Button","RangeChart","PreflopCharts","selections","setSelections","randomizer","setRandomizer","games","onlineCashOptions","onClickButton","option","param","newSelections","i","length","map","item","index","subitem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nimport RangeChart from \"../components/RangeChart\";\n\nfunction PreflopCharts(){\n    const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n    const [randomizer, setRandomizer] = useState(\"--\");\n\n    const games = [\"Online Cash\", \"MTT\"];\n\n    const onlineCashOptions = [\n        [\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]\n    ];\n\n    const onClickButton = (option, param) => {\n        const newSelections = [...selections];\n        newSelections[option] = param;\n        \n        if(option === 1 && param === \"RFI\"){\n            option++;\n            newSelections[option] = \"None\";\n        }\n\n        for(let i = option+1; i < selections.length; i++){\n            newSelections[i]= \"\";\n        }\n\n        setSelections(newSelections);\n    }\n\n    return(\n        <>\n            <div className=\"justify-content-center\">\n                <div className=\"btn-group-spacing\">\n                {games.map((item) => { return ( \n                    <Button className=\"btn-spacing\" variant={(selections[0] === item ? \"light\" : \"secondary\")} onClick={() => onClickButton(0, item)}>{item}</Button>\n                )})}\n                </div>\n                {onlineCashOptions.map((item, index) => { return (\n                <div className=\"btn-group-spacing\">\n                    <ButtonGroup size=\"sm\">\n                    {item.map((subitem) => { return (\n                        <Button variant={(selections[index+1] === subitem ? \"light\" : \"secondary\")} disabled={!selections[index].length || ( index === 1 && selections[2] === 'None') ? true : false} onClick={() => onClickButton(index+1, subitem)}>{subitem}</Button>\n                    )})}\n                    </ButtonGroup>\n                </div>\n                )})}\n            </div>\n            <RangeChart selections={selections}/>\n        </>\n    )\n}\n\nexport default PreflopCharts;"]},"metadata":{},"sourceType":"module"}