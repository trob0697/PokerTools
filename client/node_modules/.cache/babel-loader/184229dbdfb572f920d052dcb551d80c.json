{"ast":null,"code":"var _jsxFileName = \"/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreflopCharts() {\n  _s();\n\n  const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n  const [randomizer, setRandomizer] = useState(\"--\");\n  const games = [\"Online Cash\", \"MTT\"];\n  const onlineCashOptions = [[\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]];\n\n  const onClickButtonGroup = (option, param) => {// onlineCashSelections[option] = param;\n    // if(option == 1 && param == \"RFI\"){\n    //   option++;\n    //   onlineCashSelections[option] = \"None\";\n    // }\n    // for(let i = option+1; i < onlineCashSelections.length; i++){\n    //   onlineCashSelections[i] = \"\";\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PreflopCharts, \"OJnoh/CaDXvX8O0a1e+QibQAXsc=\");\n\n_c = PreflopCharts;\nexport default PreflopCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreflopCharts\");","map":{"version":3,"sources":["/Users/tahreak/Workspace/bombpot/src/pages/PreflopCharts.js"],"names":["React","useState","ButtonGroup","Button","PreflopCharts","selections","setSelections","randomizer","setRandomizer","games","onlineCashOptions","onClickButtonGroup","option","param"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,iBAApC;;;AAEA,SAASC,aAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMQ,KAAK,GAAG,CAAC,aAAD,EAAgB,KAAhB,CAAd;AAEA,QAAMC,iBAAiB,GAAG,CACxB,CAAC,KAAD,EAAQ,QAAR,EAAkB,cAAlB,EAAkC,WAAlC,CADwB,EAExB,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,CAFwB,EAGxB,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,KAApB,EAA2B,IAA3B,EAAiC,IAAjC,CAHwB,CAA1B;;AAMA,QAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB,CAC1C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1CQT,a;;KAAAA,a;AA4CT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nfunction PreflopCharts(){\n    const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n    const [randomizer, setRandomizer] = useState(\"--\");\n\n    const games = [\"Online Cash\", \"MTT\"];\n\n    const onlineCashOptions = [\n      [\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"],\n      [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"],\n      [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]\n    ];\n\n    const onClickButtonGroup = (option, param) => {\n        // onlineCashSelections[option] = param;\n        // if(option == 1 && param == \"RFI\"){\n        //   option++;\n        //   onlineCashSelections[option] = \"None\";\n        // }\n    \n        // for(let i = option+1; i < onlineCashSelections.length; i++){\n        //   onlineCashSelections[i] = \"\";\n        // }\n    }\n\n    return(\n        <div className=\"container\">\n            {/* <div className=\"btn-group-spacing\">\n            {games.map((item) => { return ( \n                <Button className=\"btn-spacing\" variant={(onlineCashSelections === item ? \"light\" : \"secondary\")} onClick={() => onClickButtonGroup(0, item)}>{item}</Button>\n            )})}\n            </div> */}\n            {/* {onlineCashOptions.map((item) => { return (\n            <div className=\"btn-group-spacing\">\n                <ButtonGroup size=\"sm\">\n                {item.map((subitem) => { return (\n                    <Button variant=\"secondary\">{subitem}</Button>\n                )})}\n                </ButtonGroup>\n            </div>\n            )})} */}\n        </div>\n    )\n}\n\nexport default PreflopCharts;"]},"metadata":{},"sourceType":"module"}