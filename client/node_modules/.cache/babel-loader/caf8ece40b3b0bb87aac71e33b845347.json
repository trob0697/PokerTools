{"ast":null,"code":"var _jsxFileName = \"/Users/tahreak/Workspace/bombpot/client/src/pages/PreflopCharts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport RangeChart from \"../components/RangeChart\";\nimport Dice from \"../assets/images/dice.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreflopCharts() {\n  _s();\n\n  const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n  const [randomizer, setRandomizer] = useState(\"--\");\n  const games = [\"Online Cash\", \"MTT\"];\n  const onlineCashOptions = [[\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"], [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]];\n\n  const onClickButton = (option, param) => {\n    const newSelections = [...selections];\n    newSelections[option] = param;\n\n    if (option === 1 && param === \"RFI\") {\n      option++;\n      newSelections[option] = \"None\";\n    }\n\n    for (let i = option + 1; i < selections.length; i++) {\n      newSelections[i] = \"\";\n    }\n\n    setSelections(newSelections);\n  };\n\n  const onClickRandomize = () => {\n    const num = Math.floor(Math.random() * 100 + 1).toString();\n    setRandomizer(num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preflop-charts-btns-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group-spacing\",\n        children: games.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-spacing\",\n            variant: selections[0] === item ? \"light\" : \"secondary\",\n            onClick: () => onClickButton(0, item),\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), onlineCashOptions.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group-spacing\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            size: \"sm\",\n            children: item.map((subitem, subindex) => {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                variant: selections[index + 1] === subitem ? \"light\" : \"secondary\",\n                disabled: !selections[index].length || index === 1 && selections[2] === 'None' ? true : false,\n                onClick: () => onClickButton(index + 1, subitem),\n                children: subitem\n              }, subindex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group-spacing\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => onClickRandomize(),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Dice,\n              alt: \"dice\",\n              height: \"17.5em\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-disabled\",\n            variant: \"secondary\",\n            children: randomizer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RangeChart, {\n      selections: selections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PreflopCharts, \"OJnoh/CaDXvX8O0a1e+QibQAXsc=\");\n\n_c = PreflopCharts;\nexport default PreflopCharts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreflopCharts\");","map":{"version":3,"sources":["/Users/tahreak/Workspace/bombpot/client/src/pages/PreflopCharts.js"],"names":["React","useState","ButtonGroup","Button","RangeChart","Dice","PreflopCharts","selections","setSelections","randomizer","setRandomizer","games","onlineCashOptions","onClickButton","option","param","newSelections","i","length","onClickRandomize","num","Math","floor","random","toString","map","item","index","subitem","subindex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nimport RangeChart from \"../components/RangeChart\";\nimport Dice from \"../assets/images/dice.png\"\n\nfunction PreflopCharts(){\n    const [selections, setSelections] = useState([\"\", \"\", \"\", \"\"]);\n    const [randomizer, setRandomizer] = useState(\"--\");\n\n    const games = [\"Online Cash\", \"MTT\"];\n\n    const onlineCashOptions = [\n        [\"RFI\", \"VS RFI\", \"RFI VS 3-Bet\", \" VS 4-Bet\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"],\n        [\"UTG\", \"HJ\", \"CO\", \"BTN\", \"SB\", \"BB\"]\n    ];\n\n    const onClickButton = (option, param) => {\n        const newSelections = [...selections];\n        newSelections[option] = param;\n        \n        if(option === 1 && param === \"RFI\"){\n            option++;\n            newSelections[option] = \"None\";\n        }\n\n        for(let i = option+1; i < selections.length; i++){\n            newSelections[i]= \"\";\n        }\n\n        setSelections(newSelections);\n    }\n\n    const onClickRandomize = () => {\n        const num = Math.floor((Math.random() * 100) + 1).toString();\n        setRandomizer(num);\n    }\n\n    return(\n        <div>\n            <div className=\"preflop-charts-btns-container\">\n                <div className=\"btn-group-spacing\">\n                {games.map((item, index) => { return ( \n                    <Button className=\"btn-spacing\" variant={(selections[0] === item ? \"light\" : \"secondary\")} onClick={() => onClickButton(0, item)} key={index}>{item}</Button>\n                )})}\n                </div>\n                {onlineCashOptions.map((item, index) => { return (\n                <div className=\"btn-group-spacing\" key={index+1}>\n                    <ButtonGroup size=\"sm\">\n                    {item.map((subitem, subindex) => { return (\n                        <Button variant={(selections[index+1] === subitem ? \"light\" : \"secondary\")} disabled={!selections[index].length || ( index === 1 && selections[2] === 'None') ? true : false} onClick={() => onClickButton(index+1, subitem)} key={subindex}>{subitem}</Button>\n                    )})}\n                    </ButtonGroup>\n                </div>\n                )})}\n                <div className=\"btn-group-spacing\">\n                    <ButtonGroup size=\"sm\">\n                        <Button variant=\"secondary\" onClick={() => onClickRandomize()}><img src={Dice} alt=\"dice\" height=\"17.5em\"/></Button>\n                        <Button className=\"btn-disabled\" variant=\"secondary\">{randomizer}</Button>\n                    </ButtonGroup>\n                </div>\n            </div>\n            <RangeChart selections={selections}/>\n        </div>\n    )\n}\n\nexport default PreflopCharts;"]},"metadata":{},"sourceType":"module"}